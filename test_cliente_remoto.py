#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script de prueba para clientes remotos
Verifica que la conexi√≥n al servidor PostgreSQL funcione
"""
import sys
import socket

def test_conexion():
    """Prueba la conexi√≥n al servidor"""
    print("üîç PRUEBA DE CONEXI√ìN REMOTA")
    print("=" * 40)
    print("Servidor: 192.168.1.167")
    print("Puerto: 5432")
    print()
    
    # Verificar conectividad b√°sica
    print("1. Verificando conectividad de red...")
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(5)
        result = sock.connect_ex(('192.168.1.167', 5432))
        sock.close()
        
        if result == 0:
            print("‚úÖ Puerto 5432 est√° abierto y accesible")
        else:
            print("‚ùå No se puede conectar al puerto 5432")
            print("   Verifica:")
            print("   - Que el servidor est√© encendido")
            print("   - Que no haya firewall bloqueando")
            print("   - Que el reenv√≠o de puertos est√© configurado")
            return False
    except Exception as e:
        print(f"‚ùå Error de red: {e}")
        return False
    
    # Verificar conexi√≥n PostgreSQL
    print("\n2. Verificando conexi√≥n PostgreSQL...")
    try:
        import psycopg2
        
        config = {
            "host": "192.168.1.167",
            "port": 5432,
            "user": "postgres",
            "password": "ubuntu",
            "database": "Escaner",
            "connect_timeout": 10
        }
        
        conn = psycopg2.connect(**config)
        cursor = conn.cursor()
        
        # Probar consulta simple
        cursor.execute("SELECT COUNT(*) FROM usuarios;")
        count = cursor.fetchone()
        
        conn.close()
        
        print(f"‚úÖ Conexi√≥n PostgreSQL exitosa")
        print(f"‚úÖ Base de datos accesible ({count[0]} usuarios)")
        print("\nüéâ ¬°Todo funciona correctamente!")
        print("   Tu aplicaci√≥n .exe deber√≠a funcionar sin problemas")
        return True
        
    except ImportError:
        print("‚ùå psycopg2 no est√° instalado")
        print("   Esto es normal en clientes - la aplicaci√≥n .exe incluye todo lo necesario")
        print("‚úÖ La aplicaci√≥n deber√≠a funcionar correctamente")
        return True
        
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n PostgreSQL: {e}")
        print("\nPosibles soluciones:")
        print("1. Verifica que el servidor est√© configurado para conexiones remotas")
        print("2. Verifica las credenciales de acceso")
        print("3. Contacta al administrador del sistema")
        return False

def main():
    """Funci√≥n principal"""
    print("üöÄ VERIFICADOR PARA CLIENTES REMOTOS")
    print("=" * 50)
    print("Este script verifica que puedas conectarte al servidor")
    print("antes de usar la aplicaci√≥n Esc√°ner V&C")
    print()
    
    if test_conexion():
        print("\n‚úÖ VERIFICACI√ìN EXITOSA")
        print("Puedes usar la aplicaci√≥n Escaner_V0.3.2.exe")
    else:
        print("\n‚ùå VERIFICACI√ìN FALLIDA")
        print("Contacta al administrador antes de usar la aplicaci√≥n")
    
    print("\nPresiona Enter para salir...")
    input()

if __name__ == "__main__":
    main() 